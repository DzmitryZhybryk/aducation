info:
  title: FastAPI
  version: 0.1.0
openapi: 3.0.2
paths:
  /:
    get:
      operationId: index_page__get
      responses:
        '200':
          content:
            text/html:
              schema:
                type: string
          description: Successful Response
      summary: Index Page
  /api/ISI/recognize/:
    post:
      description: url для распознавания человека на фотографии
      operationId: recognize_user_api_ISI_recognize__post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_recognize_user_api_ISI_recognize__post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Recognize User
  /api/ISI/user/{user_uuid}/:
    delete:
      description: url для удаления пользователя из базы распознавания
      operationId: delete_user_api_ISI_user__user_uuid___delete
      parameters:
      - in: path
        name: user_uuid
        required: true
        schema:
          format: uuid
          title: User Uuid
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete User
    post:
      description: url для добавления пользователя в базу распознавания
      operationId: create_user_api_ISI_user__user_uuid___post
      parameters:
      - in: path
        name: user_uuid
        required: true
        schema:
          format: uuid
          title: User Uuid
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_create_user_api_ISI_user__user_uuid___post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create User
  /api/ISI/user/{user_uuid}/{photo_uuid}/:
    delete:
      description: url для удаления фотографии пользователя из базы распознавания
      operationId: delete_user_photo_api_ISI_user__user_uuid___photo_uuid___delete
      parameters:
      - in: path
        name: user_uuid
        required: true
        schema:
          format: uuid
          title: User Uuid
          type: string
      - in: path
        name: photo_uuid
        required: true
        schema:
          format: uuid
          title: Photo Uuid
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete User Photo
    post:
      description: url для добавления пользователю новой фотографии
      operationId: add_new_user_photo_api_ISI_user__user_uuid___photo_uuid___post
      parameters:
      - in: path
        name: user_uuid
        required: true
        schema:
          format: uuid
          title: User Uuid
          type: string
      - in: path
        name: photo_uuid
        required: true
        schema:
          format: uuid
          title: Photo Uuid
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_add_new_user_photo_api_ISI_user__user_uuid___photo_uuid___post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Add New User Photo
    put:
      description: url для изменения фотографии пользователя в базе распознавания
      operationId: update_user_photo_api_ISI_user__user_uuid___photo_uuid___put
      parameters:
      - in: path
        name: user_uuid
        required: true
        schema:
          format: uuid
          title: User Uuid
          type: string
      - in: path
        name: photo_uuid
        required: true
        schema:
          format: uuid
          title: Photo Uuid
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_update_user_photo_api_ISI_user__user_uuid___photo_uuid___put'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update User Photo
  /api/ISI/validate_photo/:
    post:
      description: url для проверки фотографии на валидность
      operationId: validate_user_photo_api_ISI_validate_photo__post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_validate_user_photo_api_ISI_validate_photo__post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidatePhotoResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Validate User Photo
components:
  schemas:
    Body_add_new_user_photo_api_ISI_user__user_uuid___photo_uuid___post:
      properties:
        new_user_photo:
          format: binary
          title: New User Photo
          type: string
      required:
      - new_user_photo
      title: Body_add_new_user_photo_api_ISI_user__user_uuid___photo_uuid___post
      type: object
    Body_create_user_api_ISI_user__user_uuid___post:
      properties:
        file:
          format: binary
          title: File
          type: string
      required:
      - file
      title: Body_create_user_api_ISI_user__user_uuid___post
      type: object
    Body_recognize_user_api_ISI_recognize__post:
      properties:
        photo:
          format: binary
          title: Photo
          type: string
      required:
      - photo
      title: Body_recognize_user_api_ISI_recognize__post
      type: object
    Body_update_user_photo_api_ISI_user__user_uuid___photo_uuid___put:
      properties:
        new_user_photo:
          format: binary
          title: New User Photo
          type: string
      required:
      - new_user_photo
      title: Body_update_user_photo_api_ISI_user__user_uuid___photo_uuid___put
      type: object
    Body_validate_user_photo_api_ISI_validate_photo__post:
      properties:
        photo:
          format: binary
          title: Photo
          type: string
      required:
      - photo
      title: Body_validate_user_photo_api_ISI_validate_photo__post
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    ValidatePhotoResponse:
      properties:
        status:
          enum:
          - Фотография прошла проверку
          title: Status
          type: string
      required:
      - status
      title: ValidatePhotoResponse
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
  securitySchemes:
    HTTPBearer:
      scheme: bearer
      type: http